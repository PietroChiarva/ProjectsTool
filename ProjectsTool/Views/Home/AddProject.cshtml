@model ProjectsTool.Project

<style>
    #myBtn {
        display: none;
        position: fixed;
        bottom: 15px;
        right: 30px;
        z-index: 99;
        font-size: 18px;
        border: none;
        outline: none;
        background-color: red;
        color: white;
        cursor: pointer;
        padding: 15px;
        border-radius: 4px;
    }

        #myBtn:hover {
            background-color: #0000ff;
        }

    input[type=text] {
        width: 200px;
        box-sizing: border-box;
        border: 2px solid #ccc;
        border-radius: 4px;
        font-size: 16px;
        background-color: white;
        background-image: url('searchicon.png');
        background-position: 10px 10px;
        background-repeat: no-repeat;
        padding: 12px 20px 12px 40px;
        -webkit-transition: width 0.4s ease-in-out;
        transition: width 0.4s ease-in-out;
    }

        input[type=text]:focus {
            width: 100%;
        }

    input[type=date] {
        width: 200px;
        height: 40px;
        box-sizing: border-box;
        border: 2px solid #ccc;
        border-radius: 4px;
        font-size: 16px;
        background-color: white;
        /*background-position: 10px 10px;*/
        /*background-repeat: no-repeat;*/
        /*padding: 12px 20px 12px 40px;*/
        /*-webkit-transition: width 0.4s ease-in-out;
        transition: width 0.4s ease-in-out;*/
    }

    /*input[type=date]:focus {
            width: 100%;
        }*/
</style>


    <div class="form-horizontal">
        <h4>Project</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">
                @Html.LabelFor(model => model.IDProject, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.IDProject, new { htmlAttributes = new {  @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IDProject, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.ProjectName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProjectName, new { htmlAttributes = new { type = "text", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProjectName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { type = "date", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { type = "date", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsFinish, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsFinish)
                    @Html.ValidationMessageFor(model => model.IsFinish, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IDClient, "IDClient", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IDClient, new SelectList(ViewBag.RoleList, "Value", "Text"), "Select a...", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IDClient, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.IDPerson, "IDPerson", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IDPerson", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IDPerson, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <a class="btn btn-default" onclick="InsertProject()">Insert</a>
            </div>
        </div>
    </div>


    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    <script type="text/javascript">

        function InsertProject() {

            //creo l'oggetto associando le variabili
            var DatiProject = {
                //IDProject: $('#IDProject').val(),
                ProjectName: $('#ProjectName').val(),
                StartDate: $('#StartDate').val(),
                EndDate: $('#EndDate').val(),
                IDClient: $('#IDClient').val(),
            };

            //chiamata ajax
            $.ajax({
                //imposto il tipo di invio dati (GET O POST)
                type: "POST",
                //Dove devo inviare i dati recuperati dal form?
                url: "@Url.Action("_JSONAddProject", "Home")",
                //Quali dati devo inviare? e che tipo
                data: DatiProject,
                success: function (data) {
                    alert(data.messaggio);
                    if (data.flag == true) {
                        alert(data.messaggio);
                    }
                },
                error: function () {
                    alert("Chiamata fallita, riprova");
                    //sempre meglio impostare una callback in caso di fallimento
                }

            });
        };

    </script>
