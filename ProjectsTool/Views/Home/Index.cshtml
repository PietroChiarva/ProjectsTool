@model ProjectsTool.Models.ProjectModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
   
}

<style>
    /*tr {
        display: none;
    }

        tr.header, tr.header1 {
            display: table-row;

        }
        tr.header {
            cursor: pointer;
        }*/

    .button {
        display: inline-block;
        border-radius: 4px;
        background-color: DodgerBlue;
        border: none;
        color: #FFFFFF;
        text-align: center;
        font-size: 28px;
        padding: 20px;
        width: 200px;
        transition: all 0.5s;
        cursor: pointer;
        margin: 5px;
    }

        .button span {
            cursor: pointer;
            display: inline-block;
            position: relative;
            transition: 0.5s;
        }

            .button span:after {
                content: '\00bb';
                position: absolute;
                opacity: 0;
                top: 0;
                right: -20px;
                transition: 0.5s;
            }

        .button:hover span {
            padding-right: 25px;
        }

            .button:hover span:after {
                opacity: 1;
                right: 0;
            }
</style>

<body onload="CheckProjectsDate('@Model.IDManager')">

   

    <h2>Home Page</h2>
    <div class="row">
        <div class="col-md-4">
            <input type="text" id="myInput" onkeyup="myFunction()" placeholder="Search for..." title="Type in a name">

            <select id="filterSearch" class="custom-select">
                <option value="">Search Filters</option>
                <option value="StartDate">Start Date</option>
                <option value="EndDate">End Date</option>
                <option value="Client">Client</option>
                <option value="Manager">Manager</option>
            </select>
        </div>
        <div class="col-md-4">
            <input type="checkbox" id="ManagerCheck" onclick="OnlyManagerProjects('@Model.ManagerName')" />
             <p>See only your Projects</p>
        </div>

    </div>
    <div class="row">
        <div class="col-md-10">

            <table class="table" id="myTable">



                @foreach (var item in Model.Projects)
                {
                    if (Model.Projects.IndexOf(item) == 0)
                    {
                        <tr>

                            <th>
                                @Html.DisplayNameFor(model => item.ProjectName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => item.StartDate)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => item.EndDate)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => item.IsFinish)
                            </th>

                            <th>
                                @Html.DisplayNameFor(model => item.ClientName)
                            </th>

                            <th>
                                @Html.DisplayNameFor(model => item.ManagerName)
                            </th>
                        </tr>
                    }

                        <tr>

                            <td>
                                @Html.DisplayFor(modelItem => item.ProjectName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.StartDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.EndDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.IsFinish)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ClientName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ManagerName)
                            </td>
                            @{
                                @helper Disabled(bool disable)
                                 {
                                    if (!disable)
                                    {
                                       @:disabled
                                    }

                                 }
                                @helper IsFinish(bool isFinish)
                                {
                                    if (isFinish)
                                    {
                                       @:disabled
                                    }
                                }
                            }
                            <td>
                                <a class="btn btn-primary @Disabled(item.IsYourManager) @IsFinish(item.IsFinish)" onclick="ShowResourceModal ('@item.IDProject')">Add resources</a>
                                <a class="btn btn-primary @Disabled(item.IsYourManager) @IsFinish(item.IsFinish)" onclick="ShowModifyModal ('@item.IDProject')">Modify</a>
                                <a class="btn btn-primary @Disabled(item.IsYourManager) @IsFinish(item.IsFinish)" onclick="ShowConcludeModal ('@item.IDProject')">Conclude</a>
                                <a class="btn btn-primary @Disabled(item.IsYourManager)" onclick="ShowDeleteModal ('@item.IDProject')">Delete</a>
                            </td>
                        </tr>
                }

            </table>


        </div>



        <div class="col-sm-2">
            <div class="card" id="Resource">
                <div class="card-body text-center">
                    <h5 class="card-title"></h5>
                    <a href="@Url.Action("Resources","Resources")" class="button">Resources</a>
                </div>
            </div>


            <div class="card" id="AddProject">
                <div class="card-body text-center">
                    <h5 class="card-title"></h5>
                    <a class="button" onclick="ShowAddProjectModal()">ADD NEW PROJECT</a>
                </div>
            </div>

            <div class="card" id="ClientSection">
                <div class="card-body text-center">
                    <h5 class="card-title"></h5>
                    <a href="@Url.Action("ClientSection","ClientSection")" class="button">Client Section</a>
                </div>
            </div>

        </div>
    </div>
</body>
<script type="text/javascript">
    function CheckProjectsDate(IDManager) {
        data = {
            IDManager: IDManager
        };
         $.ajax({
                //imposto il tipo di invio dati (GET O POST)
                type: "GET",
                //Dove devo inviare i dati recuperati dal form?
                url: "@Url.Action("CheckDateProjects", "Home")",
             //Quali dati devo inviare? e che tipo
                 data: data,
                success: function (data) {
                
                    if (data.flag == true) {
                        $('#showModal .modal-body').load(Router.action('Home', 'DateProjectsModal', { IDManager: data.IDManager }));
                    $('#showModal').modal("show");
                    
                    }

                   
                },
                error: function () {

                }

            });


       
    }

    function OnlyManagerProjects(ManagerName) {
        
        var OnlyManager = $('#ManagerCheck').prop('checked');
        if (OnlyManager == true) {
            var filter, table, tr, td, i;
            filter = ManagerName;
            table = document.getElementById("myTable");
            tr = table.getElementsByTagName("tr");
            for (i = 0; i < tr.length; i++) {
                td = tr[i].getElementsByTagName("td")[5];
                if (td) {
                    if (td.innerText == filter) {
                        tr[i].style.display = "";
                    } else {
                        tr[i].style.display = "none";
                    }
                }
            }
        }
        else {
            window.location.href = "@Url.Action("Index","Home")";
        }

    }

    function ShowResourceModal(IDProject) {

        $('#showModal .modal-body').load(Router.action('Home', 'SeeResource', { IDProject: IDProject }));
        $('#showModalInside').width(1000);
        $('#showModal').modal("show");


    }
    function ShowModifyModal(IDProject) {

        $('#showModal .modal-body').load(Router.action('Home', 'ModifyForm', { IDProject: IDProject }));
        $('#showModalInside').width(600);
        $('#showModal').modal("show");


    }
    function ShowDeleteModal(IDProject) {

        $('#showModal .modal-body').load(Router.action('Home', 'DeleteModal', { IDProject: IDProject }));
        $('#showModal').modal("show");


    }
    function ShowConcludeModal(IDProject){
        var data = {
            IDProject: IDProject
        };
        $.ajax({
                type: "GET",
                //Dove devo inviare i dati recuperati dal form?
                url: "@Url.Action("CheckResourceForConclude", "Home")",
                //Quali dati devo inviare? e che tipo
                data: data,
                success: function (data) {
                    if (data.flag == true) {
                        alert(data.messaggio);
                        $('#showModal .modal-body').load(Router.action('Home', 'ConcludeModal', { IDProject: IDProject }));
                        $('#showModal').modal("show");
                    }
                    else {
                        $('#showModal .modal-body').load(Router.action('Home', 'ConcludeModal', { IDProject: IDProject }));
                        $('#showModal').modal("show");
                    }

                },
                error: function () {
                    alert("Chiamata fallita, riprova");
                    //sempre meglio impostare una callback in caso di fallimento
                }
            });
        


    }

    function ShowAddProjectModal() {

        $('#showModal .modal-body').load(Router.action('Home', 'AddProject'));
        $('#showModal').modal("show");


    }





    //var flag = false;
    @*function GetResources(IDProject)
    {
        if (flag == false) {
            $parameters = {};
            $parameters.IDProject = IDProject;
            $.ajax({
                type: "GET",
                //Dove devo inviare i dati recuperati dal form?
                url: "@Url.Action("GetResources", "Home")",
                //Quali dati devo inviare? e che tipo
                data: $parameters,
                success: function (data) {
                    var tr = '';
                    for (var i = 0; i < data.ProjectResources.length; i++) {
                        tr += "<tr>"+ "<td>" + data.ProjectResources[i].Serial + "</td>",
                            "<td>" + data.ProjectResources[i].Name + "</td>", "<td>" + data.ProjectResources[i].Surname + "</td>",
                            "<td>" + data.ProjectResources[i].Email + "</td>", "<td>" + data.ProjectResources[i].Percentage + "</td>"
                            + "</tr>";
                        flag = true;
                    }

                },
                error: function () {
                    alert("Chiamata fallita, riprova");
                    //sempre meglio impostare una callback in caso di fallimento
                }
            });
        }
        else {
            flag = false;
        }
    }*@
  



    // When the user scrolls down 20px from the top of the document, show the button
    //window.onscroll = function () { scrollFunction() };

    //function scrollFunction() {
    //    if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
    //        document.getElementById("myBtn").style.display = "block";
    //    } else {
    //        document.getElementById("myBtn").style.display = "none";
    //    }
    //}

    //// When the user clicks on the button, scroll to the top of the document
    //function topFunction() {
    //    document.body.scrollTop = 0;
    //    document.documentElement.scrollTop = 0;
    //}


    function myFunction() {
        var filterOption = $('#filterSearch').val();
        var input, filter, table, tr, td, i;
        input = document.getElementById("myInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("myTable");
        tr = table.getElementsByTagName("tr");
        for (i = 0; i < tr.length; i++) {
            if (filterOption == "") {
                td = tr[i].getElementsByTagName("td")[0];
            }
            else if (filterOption == "StartDate") {
                td = tr[i].getElementsByTagName("td")[1];
            }
            else if (filterOption == "EndDate") {
                td = tr[i].getElementsByTagName("td")[2];
            }
            else if (filterOption == "Client") {
                td = tr[i].getElementsByTagName("td")[4];
            }
            else if (filterOption == "Manager") {
                td = tr[i].getElementsByTagName("td")[5];
            }
            if (td) {
                if (td.innerHTML.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }




</script>


