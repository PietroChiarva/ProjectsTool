@model ProjectsTool.Models.ProjectModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    tr {
        display: none;
    }

        tr.header, tr.header1 {
            display: table-row;
            
        }
        tr.header {
            cursor: pointer;
        }

    .button {
        display: inline-block;
        border-radius: 4px;
        background-color: DodgerBlue;
        border: none;
        color: #FFFFFF;
        text-align: center;
        font-size: 28px;
        padding: 20px;
        width: 200px;
        transition: all 0.5s;
        cursor: pointer;
        margin: 5px;
    }

        .button span {
            cursor: pointer;
            display: inline-block;
            position: relative;
            transition: 0.5s;
        }

            .button span:after {
                content: '\00bb';
                position: absolute;
                opacity: 0;
                top: 0;
                right: -20px;
                transition: 0.5s;
            }

        .button:hover span {
            padding-right: 25px;
        }

            .button:hover span:after {
                opacity: 1;
                right: 0;
            }
</style>

<body>
<h2>Home Page</h2>

<div class="row">
    <div class="col-sm-10">
        <table class="table">

            @foreach (var item in Model.Projects)
            {
                if (Model.Projects.IndexOf(item) == 0)
                {
                    <tr class="header1">

                        <th>
                            @Html.DisplayNameFor(model => item.ProjectName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => item.StartDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => item.EndDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => item.IsFinish)
                        </th>

                        <th>
                            @Html.DisplayNameFor(model => item.ClientName)
                        </th>

                        <th>
                            @Html.DisplayNameFor(model => item.ManagerName)
                        </th>
                    </tr>
                }
              
                <tr class="header" onclick="GetResources('@item.IDProject')">
                    <td>
                        @Html.DisplayFor(modelItem => item.ProjectName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StartDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EndDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IsFinish)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ClientName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ManagerName)
                    </td>
                    <td>
                        <a class="btn btn-primary" onclick="ShowResourceModal ('@item.IDProject')">Add resources</a>
                        <a class="btn btn-primary" onclick="ShowModifyModal ('@item.IDProject')">Modify</a>
                        <a class="btn btn-primary" onclick="ShowConcludeModal ('@item.IDProject')">Conclude</a>
                        <a class="btn btn-primary" onclick="ShowDeleteModal ('@item.IDProject')">Delete</a>
                    </td>
                </tr>
            }
            @{ProjectsTool.Models.ProjectResource projectModel = new ProjectsTool.Models.ProjectResource();

                <tr>
                    <th>
                        @Html.DisplayNameFor(model => projectModel.Serial)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => projectModel.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => projectModel.Surname)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => projectModel.Email)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => projectModel.Percentage)
                    </th>


                </tr>
            }
        </table>


    </div>



    <div class="col-sm-2">
        <div class="card" id="Resource">
            <div class="card-body text-center">
                <h5 class="card-title"></h5>
                <a href="@Url.Action("Resources","Resources")" class="button">Resources</a>
            </div>
        </div>


        <div class="card" id="AddProject">
            <div class="card-body text-center">
                <h5 class="card-title"></h5>
                <a class="button" onclick="ShowAddProjectModal()">ADD NEW PROJECT</a>
            </div>
        </div>

        <div class="card" id="ClientSection">
            <div class="card-body text-center">
                <h5 class="card-title"></h5>
                <a href="@Url.Action("ClientSection","ClientSection")" class="button">Client Section</a>
            </div>
        </div>

    </div>
</div>
</body>
<script type="text/javascript">

    function ShowResourceModal(IDProject) {

        $('#showModal .modal-body').load(Router.action('Home', 'SeeResource', { IDProject: IDProject }));
        $('#showModal').modal("show");


    }
    function ShowModifyModal(IDProject) {

        $('#showModal .modal-body').load(Router.action('Home', 'ModifyForm', { IDProject: IDProject }));
        $('#showModal').modal("show");


    }
    function ShowDeleteModal(IDProject) {

        $('#showModal .modal-body').load(Router.action('Home', 'DeleteModal', { IDProject: IDProject }));
        $('#showModal').modal("show");


    }
    function ShowConcludeModal(IDProject){

        $('#showModal .modal-body').load(Router.action('Home', 'ConcludeModal', { IDProject: IDProject }));
        $('#showModal').modal("show");


    }

    function ShowAddProjectModal() {

        $('#showModal .modal-body').load(Router.action('Home', 'AddProject'));
        $('#showModal').modal("show");


    }





    var flag = false;
    function GetResources(IDProject)
    {
        if (flag == false) {
            $parameters = {};
            $parameters.IDProject = IDProject;
            $.ajax({
                type: "GET",
                //Dove devo inviare i dati recuperati dal form?
                url: "@Url.Action("GetResources", "Home")",
                //Quali dati devo inviare? e che tipo
                data: $parameters,
                success: function (data) {
                    var tr = '';
                    for (var i = 0; i < data.ProjectResources.length; i++) {
                        tr += "<tr>"+ "<td>" + data.ProjectResources[i].Serial + "</td>",
                            "<td>" + data.ProjectResources[i].Name + "</td>", "<td>" + data.ProjectResources[i].Surname + "</td>",
                            "<td>" + data.ProjectResources[i].Email + "</td>", "<td>" + data.ProjectResources[i].Percentage + "</td>"
                            + "</tr>";
                        flag = true;
                    }

                },
                error: function () {
                    alert("Chiamata fallita, riprova");
                    //sempre meglio impostare una callback in caso di fallimento
                }
            });
        }
        else {
            flag = false;
        }
    }
    $('tr.header').click(function () {
        $(this).nextUntil('tr.header').css('display', function (i, v) {
            return this.style.display === 'table-row' ? 'none' : 'table-row';
        });
    });

    //function ShowProjectModal(IDPerson) {

    //    //window.open(Router.action('Resources', 'Details', { IDPerson: IDPerson }));
    //    //$('#showModal .modal-body').load(Router.action('Employee', 'Index', { UserID: UserID }));
    //    //$('#showModal').modal("show");


    //}

    
    //function ShowViewModal(UserID) {

    //    $('#showModal .modal-body').load(Router.action('Manager', 'ViewTask', { UserID: UserID }));
    //    $('#showModal').modal("show");

    //}

    //function ShowAssegnaModal(UserID) {

    //    $('#showModal .modal-body').load(Router.action('Manager', 'AssegnaTask', { UserID: UserID }));
    //    $('#showModal').modal("show");

    //}



    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function () { scrollFunction() };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("myBtn").style.display = "block";
        } else {
            document.getElementById("myBtn").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }


    function myFunction() {
        var input, filter, table, tr, td, i;
        input = document.getElementById("myInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("myTable");
        tr = table.getElementsByTagName("tr");
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[1];
            if (td) {
                if (td.innerHTML.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }




</script>


