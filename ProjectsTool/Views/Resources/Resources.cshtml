@model IEnumerable<ProjectsTool.Person>



@Html.Raw(TempData["msg"])

<head>

    <style>
        .button {
            display: inline-block;
            border-radius: 4px;
            background-color: DodgerBlue;
            border: none;
            color: #FFFFFF;
            text-align: center;
            font-size: 28px;
            padding: 20px;
            width: 200px;
            transition: all 0.5s;
            cursor: pointer;
            margin: 5px;
        }

            .button span {
                cursor: pointer;
                display: inline-block;
                position: relative;
                transition: 0.5s;
            }

                .button span:after {
                    content: '\00bb';
                    position: absolute;
                    opacity: 0;
                    top: 0;
                    right: -20px;
                    transition: 0.5s;
                }

            .button:hover span {
                padding-right: 25px;
            }

                .button:hover span:after {
                    opacity: 1;
                    right: 0;
                }
    </style>

</head>


<body>
    <h2>Resources</h2>

    <input type="text" id="myInput" onkeyup="myFunction()" placeholder="Search for..." title="Type in a name">

    <select id="filterSearch" class="custom-select">
        <option value="">Search Filters</option>
        <option value="Serial">Serial</option>
        <option value="Name">Name</option>
        <option value="Surname">Surname</option>
        <option value="EMail">EMail</option>
    </select>


    <table class="table" id="myTable">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Serial)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Surname)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EMail)
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.Role.Role1)
                </th>
                <th></th>*@
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Serial)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Surname)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EMail)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.Role.Role1)
                    </td>*@
                <td>
                    <a class="btn btn-primary" onclick="ShowProjectModal ('@item.IDPerson')">View Project</a>
                    <a class="btn btn-primary" onclick="ShowProjectStoryModal ('@item.IDPerson')">Project Story</a>
                    <a class="btn btn-primary" onclick="ShowAssegnaProjectModal ('@item.IDPerson')">Add Project</a>
                </td>
            </tr>
        }

    </table>
</body>

<script type="text/javascript">


    function ShowProjectModal(IDPerson) {

        $('#showModal .modal-body').load(Router.action('Resources', 'ResourceProject', { IDPerson: IDPerson }));
        $('#showModal').modal("show");


    }

    function ShowProjectStoryModal(IDPerson) {

        $('#showModal .modal-body').load(Router.action('Resources', 'ProjectStoryResource', { IDPerson: IDPerson }));
        $('#showModal').modal("show");


    }

    function ShowAssegnaProjectModal(IDPerson) {

        $('#showModal .modal-body').load(Router.action('Resources', 'AssegnaProject', { IDPerson: IDPerson }));
        $('#showModalInside').width(1000);
        $('#showModal').modal("show");


    }

    //function ShowViewModal(UserID) {

    //    $('#showModal .modal-body').load(Router.action('Manager', 'ViewTask', { UserID: UserID }));
    //    $('#showModal').modal("show");

    //}

    //function ShowAssegnaModal(UserID) {

    //    $('#showModal .modal-body').load(Router.action('Manager', 'AssegnaTask', { UserID: UserID }));
    //    $('#showModal').modal("show");

    //}



    //// When the user scrolls down 20px from the top of the document, show the button
    //window.onscroll = function () { scrollFunction() };

    //function scrollFunction() {
    //    if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
    //        document.getElementById("myBtn").style.display = "block";
    //    } else {
    //        document.getElementById("myBtn").style.display = "none";
    //    }
    //}

    //// When the user clicks on the button, scroll to the top of the document
    //function topFunction() {
    //    document.body.scrollTop = 0;
    //    document.documentElement.scrollTop = 0;
    //}


    function myFunction() {
        var filterOption = $('#filterSearch').val();
        var input, filter, table, tr, td, i;
        input = document.getElementById("myInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("myTable");
        tr = table.getElementsByTagName("tr");
        for (i = 0; i < tr.length; i++) {
            if (filterOption == "") {
                td = tr[i].getElementsByTagName("td")[0];
            }
            else if (filterOption == "Serial") {
                td = tr[i].getElementsByTagName("td")[1];
            }
            else if (filterOption == "Name") {
                td = tr[i].getElementsByTagName("td")[2];
            }
            else if (filterOption == "Surname") {
                td = tr[i].getElementsByTagName("td")[3];
            }
            else if (filterOption == "Email") {
                td = tr[i].getElementsByTagName("td")[4];
            }
            if (td) {
                if (td.innerHTML.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }

</script>

